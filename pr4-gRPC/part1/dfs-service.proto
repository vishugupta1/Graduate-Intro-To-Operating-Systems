syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server

    rpc uploadFile(stream File) returns (FileReply);

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server

    rpc downloadFile(FileName) returns (stream File);

    // 3. REQUIRED (Parts 1 & 2): A method to delete files from the server

    rpc destroyFile(FileName) returns (FileReply);

    // 4. REQUIRED (Parts 1 & 2): A method to list all files on the server

    rpc retrieveFiles(listFiles) returns (ListFilesResponse);

    // 5. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server

    rpc statusOfFile(FileName) returns (statusFile);

    // 7. Any other methods you deem necessary to complete the tasks of this assignment
}

// Add your message types here

message File{
    string fileName = 1;
    int32 contentSize = 2;
    bytes content = 3;
}

message FileReply{}
message listFiles{}

message statusFile{
    string fileName = 1;
    int32 fileSize = 2;
    int32 creationTime = 3;
    int32 modifiedTime = 4;
}

message FileName{
    string fileName = 1;
}

message ListFilesResponse{
    map<string, int32> fileList = 1;
}

